networks:
  bookstack: null
  proxy:
    external: true
services:
  # Wiki service
  bookstack:
    image: lscr.io/linuxserver/bookstack:latest
    container_name: bookstack
    restart: unless-stopped
    depends_on:
      - bookstack_db
    networks:
      bookstack: null
      proxy: null
    environment:
      TZ: ${timezone:-UTC}
      PUID: ${uid}
      PGID: ${gid}
      APP_DEBUG: true
      APP_URL: https://wiki.${domain}
      APP_KEY: ${app_key}
      DB_HOST: bookstack_db
      DB_PORT: 3306
      DB_DATABASE: bookstack
      DB_USERNAME: bookstack
      DB_PASSWORD: ${db_pass}
      QUEUE_CONNECTION: null
    volumes:
      - $data/bookstack/config:/config
    labels:
      traefik.enable: 'true'
      traefik.http.routers.bookstack.entryPoints: 'https'
      traefik.http.routers.bookstack.middlewares: 'authelia@docker'
      traefik.http.routers.bookstack.rule: 'Host(`wiki.${domain}`)'
      traefik.http.routers.bookstack.tls.certresolver: 'cloudflare'
      traefik.http.services.bookstack.loadbalancer.server.url: 'http://bookstack:80'
  bookstack_db:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: bookstack_db
    restart: unless-stopped
    networks:
      bookstack: null
    environment:
      TZ: ${timezone:-UTC}
      PUID: ${uid}
      PGID: ${gid}
      MYSQL_ROOT_PASSWORD: ${root_pass}
      MYSQL_DATABASE: bookstack
      MYSQL_USER: bookstack
      MYSQL_PASSWORD: ${db_pass}
    volumes:
      - $data/bookstack/db:/config

  # Metrics service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    user: ${uid}
    security_opt:
      - no-new-privileges:true
    networks:
      proxy: null
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel
    volumes:
      - $data/grafana:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
    labels:
      traefik.enable: 'true'
      traefik.http.routers.grafana.entryPoints: 'https'
      traefik.http.routers.grafana.middlewares: 'localonly@file'
      traefik.http.routers.grafana.rule: 'Host(`gf.${local_domain}`)'
      traefik.http.routers.grafana.tls.certresolver: 'cloudflare'
      traefik.http.services.grafana.loadbalancer.server.url: 'http://grafana:3000'
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    networks:
      proxy: null
    volumes:
      - $data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/timezone:/etc/timezone:ro
    labels:
      traefik.enable: 'true'
      traefik.http.routers.prometheus.entryPoints: 'https'
      traefik.http.routers.prometheus.middlewares: 'localonly@file'
      traefik.http.routers.prometheus.rule: 'Host(`pm.${local_domain}`)'
      traefik.http.routers.prometheus.tls.certresolver: 'cloudflare'
      traefik.http.services.prometheus.loadbalancer.server.url: 'http://prometheus:9090'

  # Uptime service
  uptimekuma:
    image: louislam/uptime-kuma:latest
    container_name: uptimekuma
    restart: always
    networks:
      proxy: null
    volumes:
      - $data/uptime:/app/data:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: 'true'
      traefik.http.routers.uptimekuma.entryPoints: 'https'
      traefik.http.routers.uptimekuma.middlewares: 'authelia@docker'
      traefik.http.routers.uptimekuma.rule: 'Host(`up.${domain}`)'
      traefik.http.routers.uptimekuma.tls.certresolver: 'cloudflare'
      traefik.http.services.uptimekuma.loadbalancer.server.url: 'http://uptimekuma:3001'
