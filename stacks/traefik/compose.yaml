networks:
  proxy:
    external: true
services:  
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    restart: unless-stopped
    networks:
      proxy:
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
      - "8020:8080/tcp"
    environment:
      CF_API_EMAIL: ${email}
      CF_DNS_API_TOKEN: ${cf_api_key}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $data/traefik/traefik.yml:/traefik.yml:ro
      - $data/traefik/dynamic.yml:/dynamic.yml:ro
      - $data/traefik/acme.json:/acme.json
      - $data/logs/traefik:/var/log/traefik:rw
    labels:
      traefik.enable: 'true'
      traefik.http.routers.traefik.entryPoints: 'https'
      traefik.http.routers.traefik.rule: 'Host(`tf.${domain}`) || Host(`tf.${local_domain}`)'
      traefik.http.routers.traefik.tls.certresolver: 'cloudflare'
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.routers.traefik.middlewares: localonly@file
      traefik.http.routers.api.tls: 'true'
      traefik.http.routers.api.service: 'api@internal'
      traefik.http.routers.api.middlewares: 'authelia@docker'

  ## Crowdsec Configuration
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    restart: unless-stopped
    networks:
      proxy:
    environment:
      GID: "{GID:-1000}"
      COLLECTIONS: "crowdsecurity/linux crowdsecurity/traefik"
    depends_on:
      - 'traefik'
    volumes:
      - $data/crowdsec/db:/var/lib/crowdsec/data/
      - $data/crowdsec/config:/etc/crowdsec/
      - $data/logs/traefik:/var/log/traefik/:ro
  bouncer-traefik:
    image: docker.io/fbonalair/traefik-crowdsec-bouncer:latest
    container_name: bouncer-traefik
    restart: unless-stopped
    networks:
      proxy:
    environment:
      CROWDSEC_BOUNCER_API_KEY: ${cs_api_key}
      CROWDSEC_AGENT_HOST: crowdsec:8080
    depends_on:
      - 'crowdsec'
