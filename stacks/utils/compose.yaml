networks:
  picsur: null
  send: null
  proxy:
    external: true
x-logging-policy: &logging-policy
  logging:
    driver: local
    options:
      max-size: "10m"
      max-file: "3"
      compress: "true"
services:
  # Picsur service
  picsur:
    <<: *logging-policy
    image: ghcr.io/caramelfur/picsur:${picsur_version:-latest}
    container_name: picsur
    restart: always
    depends_on:
      - picsur_postgres
    networks:
      proxy: null
      picsur: null
    environment:
      PICSUR_DB_HOST: picsur_postgres
      PICSUR_DB_DATABASE: picsur
      PICSUR_DB_USERNAME: picsur
      PICSUR_DB_PASSWORD: ${picsur_dbpass}
      ## The default username is admin, this is not modifiable
      PICSUR_ADMIN_PASSWORD: ${picsur_adminpass}
      ## Maximum accepted size for uploads in bytes
      PICSUR_MAX_FILE_SIZE: 128000000
    labels:
      traefik.enable: "true"
      traefik.http.routers.picsur.entryPoints: "https"
      traefik.http.routers.picsur.rule: "Host(`ps.${domain}`)"
      traefik.http.routers.picsur.tls.certresolver: "cloudflare"
      traefik.http.services.picsur.loadbalancer.server.url: "http://picsur:8080"
  picsur_postgres:
    <<: *logging-policy
    image: postgres:${postgres_version:-14-alpine}
    container_name: picsur_postgres
    restart: always
    networks:
      picsur: null
    environment:
      POSTGRES_DB: picsur
      POSTGRES_USER: picsur
      POSTGRES_PASSWORD: ${picsur_dbpass}
    volumes:
      - ${data:-.}/picsur/db:/var/lib/postgresql/data

  # Privatebin service
  privatebin:
    <<: *logging-policy
    image: privatebin/nginx-fpm-alpine:${privatebin_version:-latest}
    container_name: privatebin
    restart: always
    read_only: true
    user: ${uid:-1000}:${gid:-1000}
    networks:
      proxy: null
    volumes:
      - ${data:-.}/privatebin:/srv/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.privatebin.entryPoints: "https"
      traefik.http.routers.privatebin.middlewares: "goodbois@file"
      traefik.http.routers.privatebin.rule: "Host(`pb.${domain}`)"
      traefik.http.routers.privatebin.tls.certresolver: "cloudflare"
      traefik.http.services.privatebin.loadbalancer.server.url: "http://privatebin:8080"

  # Send service
  send:
    <<: *logging-policy
    image: registry.gitlab.com/timvisee/send:${send_version:-latest}
    container_name: send
    restart: always
    depends_on:
      - send_redis
    networks:
      proxy:
      send: null
    environment:
      NODE_ENV: production
      BASE_URL: https://send.${domain}
      REDIS_HOST: send_redis
      EXPIRE_TIMES_SECONDS: 3600,86400,604800,2592000,31536000
      DEFAULT_EXPIRE_SECONDS: 3600
      MAX_EXPIRE_SECONDS: 31536000
      DOWNLOAD_COUNTS: 1,2,5
      MAX_DOWNLOADS: 5
      MAX_FILE_SIZE: 10737418240
    volumes:
      - ${data:-.}/send/app:/uploads
    labels:
      traefik.enable: "true"
      traefik.http.routers.send.entryPoints: "https"
      traefik.http.routers.send.middlewares: "goodbois@file"
      traefik.http.routers.send.rule: "Host(`send.${domain}`)"
      traefik.http.routers.send.tls.certresolver: "cloudflare"
      traefik.http.services.send.loadbalancer.server.url: "http://send:1443"
  send_redis:
    <<: *logging-policy
    image: redis:${redis_version:-alpine}
    container_name: send_redis
    restart: always
    networks:
      send: null
    volumes:
      - ${data:-.}/send/redis:/data

  # Convertx service
  convertx:
    <<: *logging-policy
    image: ghcr.io/c4illin/convertx:${convertx_version:-latest}
    container_name: convertx
    restart: always
    networks:
      proxy: null
    environment:
      JWT_SECRET: ${convertx_jwt}
      HIDE_HISTORY: true
    volumes:
      - ${data:-.}/convertx:/app/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.convertx.entryPoints: "https"
      traefik.http.routers.convertx.middlewares: "localonly@file"
      traefik.http.routers.convertx.rule: "Host(`cx.${domain}`)"
      traefik.http.routers.convertx.tls.certresolver: "cloudflare"
      traefik.http.services.convertx.loadbalancer.server.url: "http://convertx:3000"
